<h1 id="title">Cart id: {{cartId}}</h1>
<h4 id="total">total</h4>
<ul id="container">
  
</ul>

<br>
<button id="confirm">Confirmar compra</button>
<br>
<br>
<a href="/profile">Profile</a>

<br>
<br>
<a href="/session/logout">Cerrar sesión</a>


<link rel="stylesheet" href="/stylesCarts.css" />
{{!-- ACLARACION PARA EL TUTOR: TUVE QUE HACER EL SCRIPT ACA DEBIDO A QUE SI LO HACIA EN UN ARCHIVO APARTE COMO VENIA HACIENDO ME DABA EL SIGUIENTE ERROR: "VM680:1 Uncaught (in promise) SyntaxError: Unexpected token '<', "<html lang"... is not valid JSON", ES LA UNICA FORMA QUE ENCONTRE DE SOLUCIONARLO  --}}

<script>
const title = document.querySelector("#title");
const texto = title.innerText.toString();
const patron = /Cart id: ([a-zA-Z0-9]+)/;
const resultado = texto.match(patron);
const cartId = resultado[1];
const container = document.querySelector("#container");
const totalCoutn = document.querySelector("#total");

function getCart(){

const url = `http://localhost:8080/api/carts/${cartId}`;
const requestOptions = {
    method: "GET",
};

fetch(url, requestOptions)
    .then((response) => {
        return response.json();
    })
    .then((data) => {
        if (data.message == "Invalid cart ID") {
            return alert("Invalid cart ID");
        }
        let content = "";
        let total = 0;
        data.forEach((element) => {
            total += element._id.price;
            content += `<li class="item">
                            <h4>${element._id.title}</h4>
                                <span>$${element._id.price}</span>
                        </li>`;
        });
        totalCoutn.innerText = `Total: ${total}`;
        container.innerHTML = content;
    });
}

getCart();

let userName = "";
let userRole = "";
let cartIdd = "";

async function getCurrentUser() {
    const url = `http://localhost:8080/session/current`;
    const requestOptions = {
        method: "GET",
    };

    await fetch(url, requestOptions)
        .then((response) => {
            if (!response.ok) {
                throw new Error("Error en la solicitud");
            }
            return response.json();
        })
        .then((data) => {
            const { first_name, role, cart } = data;

            userName = first_name;
            userRole = role;
            cartIdd = cart;

            if (userRole != "user") {
                alert(`¡¡Hola Admin, bienvenido!!`);
            } else {
                alert(`¡¡Hola user: ${userName}, bienvenid@!!`);
            }
        })
        .catch((error) => {
            console.error(error);
        });
}
getCurrentUser();

const confirm = document.getElementById("confirm");

confirm.addEventListener("click", () => {
    const url = `http://localhost:8080/api/carts/${cartIdd}/purchase`;
    const requestOptions = {
        method: "GET",
    };

    fetch(url, requestOptions)
        .then((response) => {
            return response.json();
        })
        .then((data) => {
          
            if(data.productsNotValidated.length == 0){
                alert(`Se generó un ticket con el codigo ${data.ticket.code}, todos los productos fueron procesados`)
                getCart()
            }else{
                alert(`Se generó un ticket con el codigo ${data.ticket.code} lamentablemente no hay stock de los productos que quedaron en el carrito`)
                getCart()

            }
        });
});


    

</script>